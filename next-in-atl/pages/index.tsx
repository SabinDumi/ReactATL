import { createClient } from '../prismicio'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { Playlist } from '../Components/Playlist/Playlist'
import styles from '../styles/Home.module.css'
import { prependOnceListener } from 'process'
import { SliceLike, SliceZoneLike } from '@prismicio/react'
import { FunctionComponent, useState } from 'react'
import { IPrimary } from '../slices/Song'
import { BottomBar } from '../Components/Bottombar/Bottombar'

interface IProps {
  songs: SliceZoneLike<SliceLike<string>>
}

const Home: FunctionComponent<IProps> = (props) => {
  // @ts-ignore
  const [currentSong, setCurrentSong] = useState(props.songs[0].primary);
  const [playing, setplaying] = useState(false)
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

        <Playlist slices={props.songs} setSong={(data:IPrimary) => setCurrentSong(data)}/>
      <BottomBar songInfo={currentSong} changenext={() => { }} changeprev={() => { }} />
    </div>
  )
}

export const getServerSideProps = async () => {
  let notFound = false;
  let data;
  const Client = createClient();

  try {
    data = await Client.getByUID("playlist", "main")
  } catch (e) {
    console.error("The playlist was not found");
    notFound = true;
  }
  console.dir(data, { depth: null });

  return {
    props: { songs: data?.data.slices },
    notFound: notFound
  }
}

export default Home;